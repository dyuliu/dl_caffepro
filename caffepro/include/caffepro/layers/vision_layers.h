
#pragma once

#include <caffepro/layers/conv_layer.h>
#include <caffepro/layers/innerproduct_layer.h>
#include <caffepro/layers/pooling_layer.h>
#include <caffepro/layers/relu_layer.h>
#include <caffepro/layers/prelu_layer.h>
#include <caffepro/layers/gpu_concat_layer.h>
#include <caffepro/layers/softmax_layer.h>
#include <caffepro/layers/softmax_loss_layer.h>
#include <caffepro/layers/dropout_layer.h>
#include <caffepro/layers/dropoutsame_layer.h>
#include <caffepro/layers/eltwise_sum_layer.h>
#include <caffepro/layers/eltwise_prod_layer.h>
#include <caffepro/layers/data_bigfile_layer.h>
#include <caffepro/layers/batch_norm_layer.h>
#include <caffepro/layers/mean_norm_layer.h>
#include <caffepro/layers/runavg_batch_norm_layer.h>
#include <caffepro/layers/concat_layer.h>
#include <caffepro/layers/sigmoid_layer.h>
#include <caffepro/layers/multilabel_sigmoid_loss_layer.h>
#include <caffepro/layers/black_hole_layer.h>
#include <caffepro/layers/anchor_loc_loss_ex_layer.h>
#include <caffepro/layers/grid_generator_layer.h>
#include <caffepro/layers/sample_layer.h>
#include <caffepro/layers/data_entry_layer.h>
#include <caffepro/layers/rcnn_loss_layer.h>
#include <caffepro/layers/box_pool_layer.h>
#include <caffepro/layers/box_regression_layer.h>
#include <caffepro/layers/resize_grid_layer.h>
#include <caffepro/layers/exp_layer.h>
#include <caffepro/layers/observer_layer.h>
#include <caffepro/layers/bound_layer.h>
#include <caffepro/layers/cluster_loss_layer.h>
#include <caffepro/layers/lrn_layer.h>
#include <caffepro/layers/local_norm_layer.h>
#include <caffepro/layers/online_kmeans_loss_layer.h>
#include <caffepro/layers/padding_layer.h>
#include <caffepro/layers/weight_layer.h>
#include <caffepro/layers/correlation_layer.h>
#include <caffepro/layers/scalebias_layer.h>
#include <caffepro/layers/crop_layer.h>
#include <caffepro/layers/accuracy_layer.h>
#include <caffepro/layers/flip_layer.h>
#include <caffepro/layers/reduce_dim_layer.h>
#include <caffepro/layers/step_gate_layer.h>
#include <caffepro/layers/l2norm_layer.h>
#include <caffepro/layers/eltwise_max_layer.h>
#include <caffepro/layers/eltwise_amax_layer.h>
#include <caffepro/layers/householder_layer.h>
#include <caffepro/layers/instance_sample_layer.h>
#include <caffepro/layers/matrix_mul_layer.h>
#include <caffepro/layers/matrix_mul_stack_layer.h>
#include <caffepro/layers/transpose_layer.h>
#include <caffepro/layers/transpose4d_layer.h>
#include <caffepro/layers/learnable_dropout_layer.h>
#include <caffepro/layers/dim_innerproduct_layer.h>
#include <caffepro/layers/sym_sigmoid_layer.h>
#include <caffepro/layers/rand_select_layer.h>
#include <caffepro/layers/euclidean_loss_layer.h>
#include <caffepro/layers/softthr_layer.h>
#include <caffepro/layers/l1norm_layer.h>
#include <caffepro/layers/slice_layer.h>
#include <caffepro/layers/dimshuffle_layer.h>
#include <caffepro/layers/diag_operation_layer.h>
#include <caffepro/layers/diag4d_operation_layer.h>
#include <caffepro/layers/birelu_layer.h>
#include <caffepro/layers/softmax_loss_ohem_layer.h>
#include <caffepro/layers/softmax_ohem_layer.h>
#include <caffepro/layers/softmax_ohem_split_layer.h>
